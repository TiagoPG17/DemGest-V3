<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class StoreEmpleadoRequest extends FormRequest
{
    public function authorize(): bool
    {
        return true;
    }

    public function rules(): array
    {

        return [
            'tipo_documento_id' => 'required|exists:tipo_documento,id_tipo_documento',
            'numero_documento' => [
                'required',
                'string',
                'min:5',
                'max:11',
                'unique:empleados,numero_documento',
            ],
            'nombre_completo' => [
                'required',
                'string',
                'max:255',
            ],
            'sexo' => 'required|in:MASCULINO,FEMENINO,OTRO',
            'fecha_nacimiento' => [
                'required',
                'date',
                'before_or_equal:' . now()->subYears(18)->format('Y-m-d'),
                'after_or_equal:' . now()->subYears(80)->format('Y-m-d'),
            ],
            'estado_civil' => 'required|in:O,Soltero(a),Casado(a),Union Libre,Divorciado(a),Viudo(a)',
            'nivel_educativo' => [
                'required',
                'string',
                'max:100',
            ],
            'rango_edad_id' => 'required|exists:rango_edad,id_rango',
            'email' => [
                'nullable',
                'regex:/^[^\s@]+@[^\s@]+\.[^\s@]+$/',
                'unique:empleados,email',
                'max:255',
            ],
            'telefono' => [
                'nullable',
                'string',
                'max:13',
                'unique:empleados,telefono',
            ],
            'direccion' => [
                'nullable',
                'string',
                'max:255',
            ],
            'pais_id_nacimiento' => 'required|exists:pais,id_pais',
            'departamento_id_nacimiento' => 'required|exists:departamento,id_departamento',
            'municipio_id_nacimiento' => 'required|exists:municipio,id_municipio',
            'pais_id_residencia' => 'required|exists:pais,id_pais',
            'departamento_id_residencia' => 'required|exists:departamento,id_departamento',
            'municipio_id_residencia' => 'required|exists:municipio,id_municipio',
            'barrio_id_residencia' => 'nullable|exists:barrio,id_barrio',
            'empresa_id' => 'required|exists:empresa,id_empresa',
            'cargo_id' => 'required|exists:cargo,id_cargo',
            'fecha_ingreso' => [
                'required',
                'date',
                'before_or_equal:' . now()->format('Y-m-d'),
                'after_or_equal:' . now()->subYears(60)->format('Y-m-d'),
            ],
            'fecha_salida' => [
                'nullable',
                'date',
                'after_or_equal:fecha_ingreso',
            ],
            'tipo_contrato' => [
                'nullable',
                'string',
                'max:50',
            ],
            'observaciones' => 'nullable|string|max:1000',
            'turno' => [
                'nullable',
                'string',
                'max:50',
            ],
            'discapacidades' => 'nullable|array',
            'discapacidades.*.tipo_discapacidad' => [
                'required_with:discapacidades',
                'string',
                'max:255',
                'in:Física,Visual,Auditiva,Intelectual,Psicosocial,Múltiple',
            ],
            'discapacidades.*.enfermedad_base' => [
                'required_with:discapacidades',
                'string',
                'max:255',
            ],
            'discapacidades.*.grado_discapacidad' => [
                'nullable',
                'string',
                'max:255',
                'in:Leve,Moderada,Severa,Profunda',
            ],
            'discapacidades.*.fecha_diagnostico_discapacidad' => [
                'nullable',
                'date',
                'before_or_equal:' . now()->format('Y-m-d'),
                'after_or_equal:' . now()->subYears(80)->format('Y-m-d'),
            ],
            'discapacidades.*.certificado_discapacidad' => [
                'nullable',
                'string',
                'max:20',
            ],
            'patologias' => 'nullable|array',
            'patologias.*.nombre_patologia' => [
                'required_with:patologias',
                'string',
                'max:255',
            ],
            'patologias.*.fecha_diagnostico' => [
                'nullable',
                'date',
                'before_or_equal:' . now()->format('Y-m-d'),
                'after_or_equal:' . now()->subYears(80)->format('Y-m-d'),
            ],
            'patologias.*.gravedad_patologia' => [
                'nullable',
                'string',
                'max:255',
                'in:Leve,Moderada,Grave,Muy Grave',
            ],
            'patologias.*.descripcion_patologia' => 'nullable|string|max:255',
            'patologias.*.tratamiento_actual_patologia' => 'nullable|string|max:255',
            'beneficiarios.*.nombre_beneficiario' => 'required|string|max:255',
            'beneficiarios.*.parentesco' => 'required|in:Cónyuge,Hijo/a,Padre,Madre,Hermano/a,Otro',
            'beneficiarios.*.fecha_nacimiento' => 'nullable|date',
            'beneficiarios.*.tipo_documento_id' => 'nullable|exists:tipo_documento,id_tipo_documento',
            'beneficiarios.*.numero_documento' => 'nullable|string|max:50',
            'beneficiarios.*.nivel_educativo' => 'nullable|in:Ninguno,Preescolar,Primaria,Secundaria,Técnico,Profesional',
            'idiomas' => 'nullable|string|max:500',
            'tipo_vivienda' => 'nullable|string|max:100',
            'estrato' => 'nullable|integer|min:1|max:6',
            'vehiculo_propio' => 'nullable|in:1,0',
            'tipo_vehiculo' => 'nullable|string|max:100',
            'movilidad' => 'nullable|string|max:100',
            'institucion_educativa' => 'nullable|string|max:255',
            'intereses_personales' => 'nullable|string|max:500',
            'padre_o_madre' => 'nullable|in:1,0',
            'etnia_id' => 'nullable|integer|exists:etnias,id',
            'grupo_sanguineo_id' => 'nullable|integer|exists:grupo_sanguineo,id',
            'ciudad_laboral_id' => 'nullable|integer|exists:ciudades_laborales,id',
            'termino_contrato' => 'nullable|string|max:255',
            'aplica_dotacion' => 'nullable|in:1,0', 
            'talla_camisa' => 'nullable|string|max:10',
            'talla_pantalon' => 'nullable|string|max:10',
            'talla_zapatos' => 'nullable|string|max:10',
            'eps_id' => 'nullable|exists:eps,id',
            'afp_id' => 'nullable|exists:afp,id',
            'arl_id' => 'nullable|exists:arl,id',
            'ccf_id' => 'nullable|exists:ccf,id',
            'afc_id' => 'nullable|exists:afcs,id',

        ];
    }

    public function messages(): array
    {
        return [
            'tipo_documento_id.required' => 'El tipo de documento es obligatorio.',
            'tipo_documento_id.exists' => 'El tipo de documento seleccionado no es válido.',
            'numero_documento.required' => 'El número de documento es obligatorio.',
            'numero_documento.string' => 'El número de documento debe ser una cadena de texto.',
            'numero_documento.min' => 'El número de documento debe tener al menos 5 caracteres.',
            'numero_documento.max' => 'El número de documento no puede exceder los 11 caracteres.',
            'numero_documento.unique' => 'El número de documento ya está registrado.',
            'nombre_completo.required' => 'El nombre completo es obligatorio.',
            'nombre_completo.string' => 'El nombre completo debe ser una cadena de texto.',
            'nombre_completo.max' => 'El nombre completo no puede exceder los 255 caracteres.',
            'sexo.required' => 'El sexo es obligatorio.',
            'sexo.in' => 'El sexo seleccionado no es válido (debe ser MASCULINO, FEMENINO u OTRO).',
            'fecha_nacimiento.required' => 'La fecha de nacimiento es obligatoria.',
            'fecha_nacimiento.date' => 'La fecha de nacimiento debe ser una fecha válida.',
            'fecha_nacimiento.before_or_equal' => 'Debes tener al menos 18 años.',
            'fecha_nacimiento.after_or_equal' => 'La fecha de nacimiento no puede ser anterior a 80 años.',
            'estado_civil.required' => 'El estado civil es obligatorio.',
            'estado_civil.in' => 'El estado civil seleccionado no es válido.',
            'nivel_educativo.required' => 'El nivel educativo es obligatorio.',
            'nivel_educativo.string' => 'El nivel educativo debe ser una cadena de texto.',
            'nivel_educativo.max' => 'El nivel educativo no puede exceder los 100 caracteres.',
            'rango_edad_id.required' => 'El rango de edad es obligatorio.',
            'rango_edad_id.exists' => 'El rango de edad seleccionado no es válido.',
            'email.nullable' => 'El correo electrónico puede estar vacío.',
            'email.regex' => 'El correo electrónico no tiene un formato válido.',
            'email.unique' => 'El correo electrónico ya está registrado.',
            'email.max' => 'El correo electrónico no puede exceder los 255 caracteres.',
            'telefono.nullable' => 'El teléfono puede estar vacío.',
            'telefono.string' => 'El teléfono debe ser una cadena de texto.',
            'telefono.max' => 'El teléfono no puede exceder los 13 caracteres.',
            'telefono.unique' => 'El teléfono ya está registrado.',
            'direccion.nullable' => 'La dirección puede estar vacía.',
            'direccion.string' => 'La dirección debe ser una cadena de texto.',
            'direccion.max' => 'La dirección no puede exceder los 255 caracteres.',
            'pais_id_nacimiento.required' => 'El país de nacimiento es obligatorio.',
            'pais_id_nacimiento.exists' => 'El país de nacimiento seleccionado no es válido.',
            'departamento_id_nacimiento.required' => 'El departamento de nacimiento es obligatorio.',
            'departamento_id_nacimiento.exists' => 'El departamento de nacimiento seleccionado no es válido.',
            'municipio_id_nacimiento.required' => 'El municipio de nacimiento es obligatorio.',
            'municipio_id_nacimiento.exists' => 'El municipio de nacimiento seleccionado no es válido.',
            'pais_id_residencia.required' => 'El país de residencia es obligatorio.',
            'pais_id_residencia.exists' => 'El país de residencia seleccionado no es válido.',
            'departamento_id_residencia.required' => 'El departamento de residencia es obligatorio.',
            'departamento_id_residencia.exists' => 'El departamento de residencia seleccionado no es válido.',
            'municipio_id_residencia.required' => 'El municipio de residencia es obligatorio.',
            'municipio_id_residencia.exists' => 'El municipio de residencia seleccionado no es válido.',
            'barrio_id_residencia.exists' => 'El barrio de residencia seleccionado no es válido.',
            'empresa_id.required' => 'La empresa es obligatoria.',
            'empresa_id.exists' => 'La empresa seleccionada no es válida.',
            'cargo_id.required' => 'El cargo es obligatorio.',
            'cargo_id.exists' => 'El cargo seleccionado no es válido.',
            'fecha_ingreso.required' => 'La fecha de ingreso es obligatoria.',
            'fecha_ingreso.date' => 'La fecha de ingreso debe ser una fecha válida.',
            'fecha_ingreso.before_or_equal' => 'La fecha de ingreso no puede ser posterior a hoy.',
            'fecha_ingreso.after_or_equal' => 'La fecha de ingreso no puede ser anterior a 60 años.',
            'fecha_salida.nullable' => 'La fecha de salida puede estar vacía.',
            'fecha_salida.date' => 'La fecha de salida debe ser una fecha válida.',
            'fecha_salida.after_or_equal' => 'La fecha de salida debe ser posterior o igual a la fecha de ingreso.',
            'tipo_contrato.nullable' => 'El tipo de contrato puede estar vacío.',
            'tipo_contrato.string' => 'El tipo de contrato debe ser una cadena de texto.',
            'tipo_contrato.max' => 'El tipo de contrato no puede exceder los 50 caracteres.',
            'observaciones.nullable' => 'Las observaciones pueden estar vacías.',
            'observaciones.string' => 'Las observaciones deben ser una cadena de texto.',
            'observaciones.max' => 'Las observaciones no pueden exceder los 1000 caracteres.',
            'turno.nullable' => 'El turno puede estar vacío.',
            'turno.string' => 'El turno debe ser una cadena de texto.',
            'turno.max' => 'El turno no puede exceder los 50 caracteres.',
            'discapacidades.nullable' => 'Las discapacidades pueden estar vacías.',
            'discapacidades.array' => 'Las discapacidades deben ser un arreglo.',
            'discapacidades.*.tipo_discapacidad.required_with' => 'El tipo de discapacidad es obligatorio cuando se ingresan discapacidades.',
            'discapacidades.*.tipo_discapacidad.string' => 'El tipo de discapacidad debe ser una cadena de texto.',
            'discapacidades.*.tipo_discapacidad.max' => 'El tipo de discapacidad no puede exceder los 255 caracteres.',
            'discapacidades.*.tipo_discapacidad.in' => 'El tipo de discapacidad debe ser uno de: Física, Visual, Auditiva, Intelectual, Psicosocial, Múltiple.',
            'discapacidades.*.grado_discapacidad.required_with' => 'El grado de discapacidad es obligatorio cuando se ingresan discapacidades.',
            'discapacidades.*.grado_discapacidad.string' => 'El grado de discapacidad debe ser una cadena de texto.',
            'discapacidades.*.grado_discapacidad.max' => 'El grado de discapacidad no puede exceder los 255 caracteres.',
            'discapacidades.*.grado_discapacidad.in' => 'El grado de discapacidad debe ser uno de: Leve, Moderada, Severa, Profunda.',
            'discapacidades.*.fecha_diagnostico_discapacidad.nullable' => 'La fecha de diagnóstico de discapacidad puede estar vacía.',
            'discapacidades.*.fecha_diagnostico_discapacidad.date' => 'La fecha de diagnóstico de discapacidad debe ser una fecha válida.',
            'discapacidades.*.fecha_diagnostico_discapacidad.before_or_equal' => 'La fecha de diagnóstico de discapacidad no puede ser posterior a hoy.',
            'discapacidades.*.fecha_diagnostico_discapacidad.after_or_equal' => 'La fecha de diagnóstico de discapacidad no puede ser anterior a 80 años.',
            'discapacidades.*.enfermedad_base.string' => 'La enfermedad base debe ser una cadena de texto.',
            'discapacidades.*.enfermedad_base.max' => 'La enfermedad base no puede exceder los 255 caracteres.',
            'discapacidades.*.enfermedad_base.required_with' => 'La enfermedad base es obligatoria cuando se proporcionan discapacidades.',

            'discapacidades.*.certificado_discapacidad.nullable' => 'El certificado de discapacidad puede estar vacío.',
            'patologias.nullable' => 'Las patologías pueden estar vacías.',
            'patologias.array' => 'Las patologías deben ser un arreglo.',
            'patologias.*.nombre_patologia.required_with' => 'El nombre de la patología es obligatorio cuando se ingresan patologías.',
            'patologias.*.nombre_patologia.string' => 'El nombre de la patología debe ser una cadena de texto.',
            'patologias.*.nombre_patologia.max' => 'El nombre de la patología no puede exceder los 255 caracteres.',
            'patologias.*.fecha_diagnostico.nullable' => 'La fecha de diagnóstico de la patología puede estar vacía.',
            'patologias.*.fecha_diagnostico.date' => 'La fecha de diagnóstico de la patología debe ser una fecha válida.',
            'patologias.*.fecha_diagnostico.before_or_equal' => 'La fecha de diagnóstico de la patología no puede ser posterior a hoy.',
            'patologias.*.fecha_diagnostico.after_or_equal' => 'La fecha de diagnóstico de la patología no puede ser anterior a 80 años.',
            'patologias.*.gravedad_patologia.nullable' => 'La gravedad de la patología puede estar vacía.',
            'patologias.*.gravedad_patologia.string' => 'La gravedad de la patología debe ser una cadena de texto.',
            'patologias.*.gravedad_patologia.max' => 'La gravedad de la patología no puede exceder los 255 caracteres.',
            'patologias.*.gravedad_patologia.in' => 'La gravedad de la patología debe ser una de: Leve, Moderada, Grave, Muy Grave.',
            'patologias.*.descripcion_patologia.nullable' => 'La descripción de la patología puede estar vacía.',
            'patologias.*.descripcion_patologia.string' => 'La descripción de la patología debe ser una cadena de texto.',
            'patologias.*.descripcion_patologia.max' => 'La descripción de la patología no puede exceder los 255 caracteres.',
            'patologias.*.tratamiento_actual_patologia.nullable' => 'El tratamiento actual de la patología puede estar vacío.',
            'patologias.*.tratamiento_actual_patologia.string' => 'El tratamiento actual de la patología debe ser una cadena de texto.',
            'patologias.*.tratamiento_actual_patologia.max' => 'El tratamiento actual de la patología no puede exceder los 255 caracteres.',
            'beneficiarios.*.nombre_beneficiario.required' => 'El nombre del beneficiario es obligatorio.',
            'beneficiarios.*.nombre_beneficiario.string' => 'El nombre del beneficiario debe ser una cadena de texto.',
            'beneficiarios.*.nombre_beneficiario.max' => 'El nombre del beneficiario no puede exceder los 255 caracteres.',
            'beneficiarios.*.parentesco.required' => 'El parentesco del beneficiario es obligatorio.',
            'beneficiarios.*.parentesco.in' => 'El parentesco debe ser uno de: Cónyuge, Hijo/a, Padre, Madre, Hermano/a, Otro.',
            'beneficiarios.*.fecha_nacimiento.nullable' => 'La fecha de nacimiento del beneficiario puede estar vacía.',
            'beneficiarios.*.fecha_nacimiento.date' => 'La fecha de nacimiento del beneficiario debe ser una fecha válida.',
            'beneficiarios.*.tipo_documento_id.nullable' => 'El tipo de documento del beneficiario puede estar vacío.',
            'beneficiarios.*.tipo_documento_id.exists' => 'El tipo de documento del beneficiario seleccionado no es válido.',
            'beneficiarios.*.numero_documento.nullable' => 'El número de documento del beneficiario puede estar vacío.',
            'beneficiarios.*.numero_documento.string' => 'El número de documento del beneficiario debe ser una cadena de texto.',
            'beneficiarios.*.numero_documento.max' => 'El número de documento del beneficiario no puede exceder los 50 caracteres.',
            'beneficiarios.*.nivel_educativo.nullable' => 'El nivel educativo del beneficiario puede estar vacío.',
            'beneficiarios.*.nivel_educativo.in' => 'El nivel educativo del beneficiario debe ser uno de: Ninguno, Preescolar, Primaria, Secundaria, Técnico, Profesional.',
            'beneficiarios.*.reside_con_trabajador' => 'required|boolean',
            'beneficiarios.*.depende_economicamente' => 'required|boolean',
            'beneficiarios.*.contacto_emergencia' => 'nullable|string|max:255',
            'idiomas.nullable' => 'Los idiomas pueden estar vacíos.',
            'idiomas.string' => 'Los idiomas deben ser una cadena de texto.',
            'idiomas.max' => 'Los idiomas no pueden exceder los 500 caracteres.',
            'tipo_vivienda.nullable' => 'El tipo de vivienda puede estar vacío.',
            'tipo_vivienda.string' => 'El tipo de vivienda debe ser una cadena de texto.',
            'tipo_vivienda.max' => 'El tipo de vivienda no puede exceder los 100 caracteres.',
            'estrato.nullable' => 'El estrato puede estar vacío.',
            'estrato.integer' => 'El estrato debe ser un número entero.',
            'estrato.min' => 'El estrato debe ser al menos 1.',
            'estrato.max' => 'El estrato no puede exceder el 6.',
            'vehiculo_propio.nullable' => 'El vehículo propio puede estar vacío.',
            'vehiculo_propio.in' => 'El vehículo propio debe ser 1 (Sí) o 0 (No).',
            'tipo_vehiculo.nullable' => 'El tipo de vehículo puede estar vacío.',
            'tipo_vehiculo.string' => 'El tipo de vehículo debe ser una cadena de texto.',
            'tipo_vehiculo.max' => 'El tipo de vehículo no puede exceder los 100 caracteres.',
            'movilidad.nullable' => 'La movilidad puede estar vacía.',
            'movilidad.string' => 'La movilidad debe ser una cadena de texto.',
            'movilidad.max' => 'La movilidad no puede exceder los 100 caracteres.',
            'institucion_educativa.nullable' => 'La institución educativa puede estar vacía.',
            'institucion_educativa.string' => 'La institución educativa debe ser una cadena de texto.',
            'institucion_educativa.max' => 'La institución educativa no puede exceder los 255 caracteres.',
            'intereses_personales.nullable' => 'Los intereses personales pueden estar vacíos.',
            'intereses_personales.string' => 'Los intereses personales deben ser una cadena de texto.',
            'intereses_personales.max' => 'Los intereses personales no pueden exceder los 500 caracteres.',
            'padre_o_madre.nullable' => 'El campo padre o madre puede estar vacío.',
            'padre_o_madre.in' => 'El campo padre o madre debe ser 1 (Sí) o 0 (No).',
            'etnia_id.nullable' => 'La etnia puede estar vacía.',
            'etnia_id.integer' => 'La etnia debe ser un número entero.',
            'etnia_id.exists' => 'La etnia seleccionada no es válida.',
            'grupo_sanguineo_id.nullable' => 'El grupo sanguíneo puede estar vacío.',
            'grupo_sanguineo_id.integer' => 'El grupo sanguíneo debe ser un número entero.',
            'grupo_sanguineo_id.exists' => 'El grupo sanguíneo seleccionado no es válido.',
            'ciudad_laboral_id.nullable' => 'La ciudad laboral puede estar vacía.',
            'ciudad_laboral_id.integer' => 'La ciudad laboral debe ser un número entero.',
            'ciudad_laboral_id.exists' => 'La ciudad laboral seleccionada no es válida.',
            'termino_contrato.nullable' => 'El término de contrato puede estar vacío.',
            'termino_contrato.string' => 'El término de contrato debe ser una cadena de texto.',
            'termino_contrato.max' => 'El término de contrato no puede exceder los 255 caracteres.',
            'aplica_dotacion.nullable' => 'La aplicación de dotación puede estar vacía.',
            'aplica_dotacion.in' => 'La aplicación de dotación debe ser 1 (Sí) o 0 (No).',
            'talla_camisa.nullable' => 'La talla de camisa puede estar vacía.',
            'talla_camisa.string' => 'La talla de camisa debe ser una cadena de texto.',
            'talla_camisa.max' => 'La talla de camisa no puede exceder los 10 caracteres.',
            'talla_pantalon.nullable' => 'La talla de pantalón puede estar vacía.',
            'talla_pantalon.string' => 'La talla de pantalón debe ser una cadena de texto.',
            'talla_pantalon.max' => 'La talla de pantalón no puede exceder los 10 caracteres.',
            'talla_zapatos.nullable' => 'La talla de zapatos puede estar vacía.',
            'talla_zapatos.string' => 'La talla de zapatos debe ser una cadena de texto.',
            'talla_zapatos.max' => 'La talla de zapatos no puede exceder los 10 caracteres.',
            'eps_id.nullable' => 'La EPS puede estar vacía.',
            'eps_id.exists' => 'La EPS seleccionada no es válida.',
            'afp_id.nullable' => 'La AFP puede estar vacía.',
            'afp_id.exists' => 'La AFP seleccionada no es válida.',
            'arl_id.nullable' => 'La ARL puede estar vacía.',
            'arl_id.exists' => 'La ARL seleccionada no es válida.',
            'ccf_id.nullable' => 'El CCF puede estar vacío.',
            'ccf_id.exists' => 'El CCF seleccionado no es válido.',
            'informacion_laboral.relacion_laboral' => 'nullable|string|max:255',
            'informacion_laboral.relacion_sindical' => 'nullable|boolean',
            
        ];
    }
}


        